#!/bin/bash

echo "==> Setup Airflow Workshop Umgebung starten..."

# 1. Logs und temporäre Dateien löschen (oder Berechtigungen setzen)
echo "-> Alte Logs und Lockfiles entfernen..."
sudo find ~/Workshop-DE-Masterclass/Data-Pipelines/Airflow/logs -type f -exec rm -f {} \; 2>/dev/null
sudo find ~/Workshop-DE-Masterclass/Data-Pipelines/Airflow/logs -type d -exec chmod 777 {} \; 2>/dev/null

# 2. Schreibrechte für wichtige Ordner setzen
echo "-> Schreibrechte setzen..."
sudo chmod -R u+rwX,g+rwX,o+rX ~/Workshop-DE-Masterclass/Data-Pipelines/Airflow/data
sudo chmod -R u+rwX,g+rwX,o+rX ~/Workshop-DE-Masterclass/Data-Pipelines/Airflow/dags
sudo chmod -R u+rwX,g+rwX,o+rX ~/Workshop-DE-Masterclass/Data-Pipelines/Airflow/plugins
sudo chmod -R u+rwX,g+rwX,o+rX ~/Workshop-DE-Masterclass/Data-Pipelines/Airflow/logs

# 2.1 Ownership korrekt setzen für Airflow (UID 50000, GID 0)
echo "-> Besitzerrechte für Airflow setzen (UID 50000, GID 0)..."
sudo chown -R 50000:0 ~/Workshop-DE-Masterclass/Data-Pipelines/Airflow/data
sudo chown -R 50000:0 ~/Workshop-DE-Masterclass/Data-Pipelines/Airflow/logs
sudo chown -R 50000:0 ~/Workshop-DE-Masterclass/Data-Pipelines/Airflow/dags
sudo chown -R 50000:0 ~/Workshop-DE-Masterclass/Data-Pipelines/Airflow/plugins

# 3. Lokale Änderungen verwerfen (alles zurücksetzen)
echo "-> Lokale Änderungen verwerfen..."
git -C ~/Workshop-DE-Masterclass reset --hard
git -C ~/Workshop-DE-Masterclass clean -fd

# 4. Remote Änderungen holen und mergen
echo "-> Pull vom Remote-Repository durchführen..."
git -C ~/Workshop-DE-Masterclass pull origin main --rebase

echo "-> Stoppe und entferne vorhandene Docker-Container..."
cd ~/Workshop-DE-Masterclass/Data-Pipelines/Airflow
docker-compose down

# 5. UID/GID exportieren für docker-compose (UID 50000, GID 0)
export UID=50000
export GID=0
echo "-> Starte Docker-Compose mit UID=$UID und GID=$GID ..."
docker-compose up -d

echo "==> Setup abgeschlossen! Viel Erfolg im Workshop!"